1/Comment implementer le multijouer
	- en reseau?
	- sur une seul session?
2/ GUI ou pas GUI? pas grave, faire un MVC et modifier la Vue pour plus tards
3/ les "cartes" peuvent être non traditionnel comme dans le cas du UNO avec des cartes de couleur et de 1 à 9,
Le cas des cartes spéciale

3/ Je pense que le joueur ne devrait que pouvoir faire:
	- obtenir les informations du tableau de bords, e.g quel carte sur la pioche, j'ai combien/quoi de carte
	- il a acces à aucun structure de donnée directement, il ne peut que envoyer ses actions, e.g tire une carte, jouer une carte si le modele me le permet etc. Seule le Modèle a le droit de toucher au donnée. bref un MVC quoi
4/ les classes obvious à implémenter que j'ai à l'idée:
	- carte
	- collection de carte
	- compositions/héritage formés de collection de carte, e.g un joueur peut avoir un nom et tenir des cartes dans sa main, la table de jeu, la pioche ou tas de carte publique 

5/ comment géneraliser le mécanisme de jeu de manière à n'avoir qu'à implémenter seulement les règles spécifique de chq jeux, un modèle puis par héritage peut être

6/ Test push Visual Studio (Vincent)


pourquoi je n'ai pas fait de vecteur polymorphique pour la classe Carte
-arithmétique des pointeurs c'est chiant à implémenter
-on s'en fous du sous-classe de carte, faut juste la reconnaitre et c'est au modèle d'appeler les commandes/actions associés donc absurde d'hériter des sous-classe à partir de carte,
on a juste besoin d'hériter une seule classe d'instanciation avec les nouveau attributs qui vont avec

à faire, pattern observeur/observable qd une joueur joue une carte
1/ crée des classes Commandes
2/ action joueur
-> vérifier si la saisit/action du joueur est valide
-> switch sur la chaine de charactères afin de trouvers la bonne classe Commandes et l'instancier
-> appeler la méthode "exécuter" de la classe Commandes
3/ la classe Vue à faire, elle hérite de la classe observeur et observe notre GameModel
4/ peut etre une classe Controller
5/ à voir si le jeu doit être bloquant(un seule thread) ou non (2ème thread qui écoute les inputs du joueur)
6/ partie joueur IA
7/ implémenter l'interface vérification de fin de partie, comptage des points
8/ initGame presque fini, faire initJoueurs ? 
-> si on veut garder une trace des scores, faut éventuellement faire une sauvegarde/lecture de score, ça devrait être optionnel

REDEFINIR LA PORTEE DES FONCTIONS A FAIRE ABSOLUMENT<<<  